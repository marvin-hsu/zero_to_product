name: Deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    name: build project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: cargo build
        run: cargo build --release
      - name: build docker image
        run: docker build -t zero_to_production .
      - name: save docker image
        run: docker save -o zero_to_production.tar zero_to_production
      - uses: actions/upload-artifact@v3
        with:
          name: zero_to_production.tar
          path: zero_to_production.tar
  unit-test: 
    name: run unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - name: run test
        run: cargo test --verbose
  pytest:
    name: Test
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.5.1
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
      - name: Install pytest and requests
        run: poetry install
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: zero_to_production.tar
      # - name: load docker image
      #   run: docker load -i zero_to_production.tar
      # - name: Build Dockerfile and run image
      #   run: docker run -d -p 3000:3000 zero_to_production
      # - name: Run tests
      #   run: poetry run pytest
  deploy:
    name: Deploy app
    needs: [unit-test,pytest]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: zero_to_production.tar
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: load docker image
        run: docker load -i zero_to_production.tar
      - run: flyctl deploy --image zero_to_production
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
